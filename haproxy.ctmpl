global
    log 127.0.0.1   local0
    log 127.0.0.1   local1 notice
    debug
    stats timeout 30s
    maxconn 1024

defaults
    log global
    option httplog
    option dontlognull
    mode http
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend http-in
    bind 0.0.0.0:80
    monitor-uri /healthcheck{{ range $i, $service := services }}{{ range $tag := .Tags }}{{ if $tag | regexMatch "^version=.+" }}{{ $version := index (. | split "=") 1 }}{{ if $service.Tags | contains "edge" }}
    # Edge for {{ $service.Name }}, Version: {{ $version }}
    acl {{ $service.Name }}{{ $version }} path_beg /v{{ $version }}/{{ $service.Name }}
    use_backend {{ $service.Name }}{{ $version }} if {{ $service.Name }}{{ $version }}
    {{ end }}{{ end }}{{ end }}{{ end }}

{{ range $i, $service := services }}{{ range $tag := .Tags }}{{ if $tag | regexMatch "^version=.+" }}{{ $version := index (. | split "=") 1 }}{{ if $service.Tags | contains "edge" }}
# Backend for {{ $service.Name }}, Version: {{ $version }}
backend {{ $service.Name }}{{ $version }}
    mode http
    balance roundrobin
    option forwardfor
    option httpchk get /healthcheck
    http-check expect ! rstatus ^5
    default-server inter 2s fall 1 rise 2
    reqrep ^([^\ ]*\ /)v{{ $version }}/{{ $service.Name }}[/]?(.*)     \1{{ $service.Name }}/\2{{range $c,$d:=service $service.Name}}{{ if $d.Tags | contains "edge" }}{{ if $d.Tags | contains (printf "%s%s" "version=" $version) }}
    server {{.Address}} {{.Address}}:{{.Port}} check
    {{ end }}{{ end }}{{ end }}{{ end }}{{ end }}{{ end }}{{ end }}

listen stats
    bind 0.0.0.0:1936
    stats enable
    stats uri /
    stats hide-version
    stats auth admin:changeme
